#!/usr/bin/env perl
use strict;
use warnings;
use Carp;
use Data::Dump qw( dump );

use FindBin;
use lib "$FindBin::Bin/../lib";

use TQ::Media;
use TQ::Utils;
use JSON;
use Getopt::Long;
use Pod::Usage;

my $converter = "$FindBin::Bin/../cantabAPM.sh";
my $help      = 0;
my $force     = 0;
my $debug     = 0;
GetOptions(
    'help'        => \$help,
    'converter=s' => \$converter,
    'force'       => \$force,
    'debug'       => \$debug,
) or pod2usage(2);
pod2usage(1) if $help;

my $media_id = shift(@ARGV) or die "$0 media_id";

my $media;
for my $col (qw( uuid id )) {
    $media = TQ::Media->new( $col => $media_id )->load_speculative;
    last if $media;
}
if ( !$media ) {
    die "No such media for id $media_id";
}
my $json = $media->transcribe(
    converter => $converter,
    debug     => $debug,
    force     => $force,
);
if ( $json and decode_json($json) ) {
    $media->transcript($json);
    $media->status('C');    # complete
    $media->save();
    TQ::Utils::send_email(
        to              => $media->owner->email,
        from            => TQ::Config::email_from(),
        subject         => 'Transcript ' . $media->uuid . ' complete',
        tmpl            => 'transcript_complete.tt',
        media           => $media,
        server_base_uri => TQ::Config::get_server_base_uri(),
    );
}
else {
    die sprintf( "Failed to create JSON transcript for: %s\n", $media->uri );
}

exit(0);

